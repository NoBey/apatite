# Test against this version of Node.js
environment:
  matrix:
    - nodejs_version: "6.1.0"
    - nodejs_version: "6.6.0"

services:
  #- mssql2016
  - postgresql94
  - mysql

# Install scripts. (runs after repo cloning)
install:
  # Get the latest stable version of Node.js or io.js
  - ps: Install-Product node $env:nodejs_version
  # install modules
  - npm install

before_test:
  #- sqlcmd -S localhost -U sa -P Password12! -Q "CREATE DATABASE apatite" -d "master"
  #- sqlcmd -S localhost -U sa -P Password12! -Q "CREATE LOGIN apatite WITH PASSWORD = 'Apatite2016!'" -d "apatite"
  #- sqlcmd -S localhost -U sa -P Password12! -Q "EXEC apatite..sp_addsrvrolemember @loginame = 'apatite', @rolename = 'sysadmin'" -d "apatite"
  - SET PGUSER=postgres
  - SET PGPASSWORD=Password12!
  - PATH=C:\Program Files\PostgreSQL\9.4\bin\;%PATH%
  - psql -c "DROP DATABASE IF EXISTS apatite;" -U postgres
  - psql -c "CREATE DATABASE apatite;" -U postgres
  - psql -c "CREATE USER apatite WITH PASSWORD 'Apatite2016!' SUPERUSER INHERIT CREATEDB CREATEROLE NOREPLICATION;" -U postgres
  - npm install pg@6.0.0
  - SET MYSQL_PWD=Password12!
  - PATH=C:\Program Files\MySql\MySQL Server 5.7\bin\;%PATH%
  - mysql -e "DROP DATABASE IF EXISTS apatite;" -uroot
  - mysql -e "CREATE DATABASE apatite;" -uroot
  - mysql -e "CREATE USER 'apatite'@'localhost' IDENTIFIED BY 'Apatite2016!';" -uroot
  - mysql -e "GRANT ALL PRIVILEGES ON apatite.* TO 'apatite'@'localhost' WITH GRANT OPTION;" -uroot
  - mysql -e "SET GLOBAL sql_mode = 'STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';" -uroot
  - npm install mysql@2.11.1

# Post-install test scripts.
test_script:
  # Output useful info for debugging.
  - node --version
  - npm --version
  # run tests
  - npm test

# Don't actually build.
build: off